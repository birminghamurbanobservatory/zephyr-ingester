// Note that you are allowed comments in a .eslintrc.json file

{
  "env": {
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "modules": true
    }
  },
  "rules": {
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "MemberExpression": "off"
      }
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    // Need this as @typescript-eslint will expect 4 spaces by default
    "@typescript-eslint/indent": "off",
    // Added following so helper functions can come after more important functions in a module
    "@typescript-eslint/no-use-before-define": [
      "error", 
      {"functions": false}
    ],
    "@typescript-eslint/camelcase": "off",
    "semi": [
      "error",
      "always"
    ],
    "no-console": [
        "error"
    ],
    "no-new-object": [
      "error"
    ],
    "object-shorthand": [
      "error"
    ],
    "quote-props": [
      "error",
      "as-needed"
    ],
    "no-array-constructor": [
      "error"
    ],
    "array-callback-return": [
      "error"
    ],
    "no-useless-escape": [
      "error"
    ],
    "wrap-iife": [
      "error"
    ],
    "no-loop-func": [
      "error"
    ],
    "no-param-reassign": [
      "error"
    ],
    "no-iterator": [
      "error"
    ],
    "dot-notation": [
      "error"
    ],
    "one-var": [
      "error",
      "never"
    ],
    "eqeqeq": [
      "error"
    ],
    "no-case-declarations": [
      "error"
    ],
    "no-nested-ternary": [
      "error"
    ],
    "no-unneeded-ternary": [
      "error"
    ],
    "brace-style": [
      "error"
    ],
    "space-before-blocks": [
      "error"
    ],
    "keyword-spacing": [
      "error"
    ],
    "space-infix-ops": [
      "error"
    ],
    "newline-per-chained-call": [
      "error",
      { 
        "ignoreChainWithDepth": 6
      }
    ],
    // "padded-blocks": [
    //   "error",
    //   "never"
    // ],
    "space-in-parens": [
      "error"
    ],
    "array-bracket-spacing": [
      "error"
    ],
    "object-curly-spacing": [
      "error"
    ],
    "comma-style": [
      "error"
    ],
    "comma-dangle": [
      "error",
      "only-multiline" // change to "never" if using browser-side code used on IE8
    ],
    "radix" : [
      "error"
    ],
    // "camelcase": [
    //   "error"
    // ],
    "new-cap": [
      "error"
    ],
    // "no-underscore-dangle": [
    //   "error",
    //   {
    //     "allow": [
    //       "_id"
    //     ]
    //   }
    // ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "strict": [
      "error"
    ],

    //--------------------------------
    // ES6 Specific Rules
    //--------------------------------
    "prefer-const": [
      "error"
    ],
    "no-const-assign": [
      "error"
    ],
    "no-var": [
      "error"
    ],
    "prefer-template": [
      "error"
    ],
    "template-curly-spacing": [
      "error"
    ],
    "prefer-rest-params": [
      "error"
    ],
    "prefer-arrow-callback": [
      "error"
    ],
    "arrow-spacing": [
      "error"
    ],
    "arrow-parens": [
      "error"
    ],
    // "arrow-body-style": [
    //   "error"
    // ],
    "no-confusing-arrow": [
      "error"
    ],
    "no-useless-constructor": [
      "error"
    ],
    "no-dupe-class-members": [
      "error"
    ],
    "no-duplicate-imports": [
      "error"
    ],
    "generator-star-spacing": [
      "error"
    ]
    
  },
  "overrides": [
    {
      "files": ["**/*.test.ts"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    }
  ]
}